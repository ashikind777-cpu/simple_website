!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Wanderlust - Travel App</title>
    <!-- Use Inter font from Google Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <!-- Load Tailwind CSS from CDN -->
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        body {
            font-family: 'Inter', sans-serif;
        }
        .hero-bg {
            background-image: url('https://placehold.co/1920x1080/000000/FFFFFF?text=Travel+App+Background');
            background-size: cover;
            background-position: center;
        }
        #itinerary-output {
            white-space: pre-wrap; /* Preserve newlines and spaces */
        }
    </style>
</head>
<body class="bg-gray-100 text-gray-800">

    <!-- Header -->
    <header class="absolute top-0 left-0 right-0 z-10 p-6">
        <nav class="container mx-auto flex justify-between items-center">
            <a href="#" class="text-white text-2xl font-bold">Wanderlust</a>
            <div class="hidden md:flex space-x-6 text-white font-medium">
                <a href="#" class="hover:text-sky-300 transition duration-300">Home</a>
                <a href="#" class="hover:text-sky-300 transition duration-300">Destinations</a>
                <a href="#" class="hover:text-sky-300 transition duration-300">Services</a>
                <a href="#" class="hover:text-sky-300 transition duration-300">About Us</a>
                <a href="#" class="hover:text-sky-300 transition duration-300">Contact</a>
            </div>
            <button class="md:hidden text-white focus:outline-none">
                <!-- Mobile menu icon (hamburger) -->
                <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16m-7 6h7"></path></svg>
            </button>
        </nav>
    </header>

    <!-- Hero Section -->
    <main>
        <section class="hero-bg relative h-screen flex items-center justify-center text-center">
            <!-- Dark overlay for better text readability -->
            <div class="absolute inset-0 bg-black bg-opacity-50"></div>
            <div class="relative z-10 text-white p-4">
                <h1 class="text-4xl sm:text-5xl lg:text-6xl font-extrabold tracking-tight leading-tight mb-4">
                    Your Journey Awaits
                </h1>
                <p class="text-lg sm:text-xl lg:text-2xl font-light max-w-2xl mx-auto mb-8">
                    Explore breathtaking destinations, book your next adventure, and create memories that last a lifetime.
                </p>
                <button class="bg-sky-500 hover:bg-sky-600 text-white font-semibold py-3 px-8 rounded-full shadow-lg transition duration-300 transform hover:scale-105">
                    Explore Now
                </button>
            </div>
        </section>

        <!-- Search Section -->
        <section class="container mx-auto -mt-16 relative z-20 px-4">
            <div class="bg-white rounded-xl shadow-lg p-6 sm:p-8 md:p-10 flex flex-col md:flex-row items-center justify-between space-y-4 md:space-y-0 md:space-x-4">
                <input type="text" placeholder="Where do you want to go?" class="w-full md:flex-1 p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-sky-500 transition-colors">
                <input type="date" class="w-full md:flex-1 p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-sky-500 transition-colors">
                <button class="w-full md:w-auto bg-sky-500 hover:bg-sky-600 text-white font-semibold py-3 px-6 rounded-lg shadow-md transition duration-300">
                    Search
                </button>
            </div>
        </section>

        <!-- Featured Destinations Section -->
        <section class="py-16 px-4">
            <div class="container mx-auto">
                <h2 class="text-3xl sm:text-4xl font-bold text-center mb-12">Popular Destinations</h2>
                <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8">
                    <!-- Destination Card 1 -->
                    <div class="bg-white rounded-xl shadow-lg overflow-hidden transform hover:scale-105 transition duration-300">
                        <img src="https://placehold.co/600x400/F0F4F8/3B82F6?text=Paris" alt="Paris" class="w-full h-48 object-cover">
                        <div class="p-6">
                            <h3 class="text-xl font-semibold mb-2">Paris, France</h3>
                            <p class="text-gray-600 mb-4">Experience the City of Love with its iconic landmarks and charming streets.</p>
                            <button class="w-full bg-gray-200 hover:bg-gray-300 text-gray-800 font-medium py-2 rounded-lg transition-colors">
                                View Details
                            </button>
                        </div>
                    </div>
                    <!-- Destination Card 2 -->
                    <div class="bg-white rounded-xl shadow-lg overflow-hidden transform hover:scale-105 transition duration-300">
                        <img src="https://placehold.co/600x400/F0F4F8/3B82F6?text=Tokyo" alt="Tokyo" class="w-full h-48 object-cover">
                        <div class="p-6">
                            <h3 class="text-xl font-semibold mb-2">Tokyo, Japan</h3>
                            <p class="text-gray-600 mb-4">Discover a fusion of traditional culture and futuristic innovation.</p>
                            <button class="w-full bg-gray-200 hover:bg-gray-300 text-gray-800 font-medium py-2 rounded-lg transition-colors">
                                View Details
                            </button>
                        </div>
                    </div>
                    <!-- Destination Card 3 -->
                    <div class="bg-white rounded-xl shadow-lg overflow-hidden transform hover:scale-105 transition duration-300">
                        <img src="https://placehold.co/600x400/F0F4F8/3B82F6?text=Rio+de+Janeiro" alt="Rio de Janeiro" class="w-full h-48 object-cover">
                        <div class="p-6">
                            <h3 class="text-xl font-semibold mb-2">Rio de Janeiro, Brazil</h3>
                            <p class="text-gray-600 mb-4">Enjoy stunning beaches, vibrant festivals, and lush rainforests.</p>
                            <button class="w-full bg-gray-200 hover:bg-gray-300 text-gray-800 font-medium py-2 rounded-lg transition-colors">
                                View Details
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <!-- AI Trip Planner Section -->
        <section class="py-16 px-4">
            <div class="container mx-auto">
                <h2 class="text-3xl sm:text-4xl font-bold text-center mb-12">âœ¨ AI Trip Planner</h2>
                <div class="bg-white rounded-xl shadow-lg p-6 sm:p-8 md:p-10 flex flex-col space-y-6">
                    <p class="text-gray-600 text-center">Enter a destination and get a personalized 3-day itinerary generated by AI.</p>
                    <div class="flex flex-col md:flex-row items-center space-y-4 md:space-y-0 md:space-x-4">
                        <input id="destination-input" type="text" placeholder="e.g., London, Tokyo, Paris" class="w-full md:flex-1 p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-sky-500 transition-colors">
                        <button id="generate-button" class="w-full md:w-auto bg-sky-500 hover:bg-sky-600 text-white font-semibold py-3 px-6 rounded-lg shadow-md transition duration-300">
                            Generate Itinerary
                        </button>
                    </div>
                    <div id="loading-indicator" class="text-center text-gray-500 hidden mt-4">Generating your itinerary...</div>
                    <div id="itinerary-output" class="bg-gray-50 rounded-lg p-6 mt-4 text-gray-700 leading-relaxed min-h-[200px] border border-gray-200">
                        Your custom itinerary will appear here.
                    </div>
                </div>
            </div>
        </section>

        <!-- Call to Action Section -->
        <section class="bg-sky-500 py-20 px-4">
            <div class="container mx-auto text-center text-white">
                <h2 class="text-3xl sm:text-4xl font-bold mb-4">Start Planning Your Next Trip Today!</h2>
                <p class="text-lg mb-8 max-w-3xl mx-auto">
                    Download our app to get exclusive deals, personalized recommendations, and seamless booking.
                </p>
                <button class="bg-white text-sky-500 font-semibold py-3 px-8 rounded-full shadow-lg transition duration-300 transform hover:scale-105">
                    Download Now
                </button>
            </div>
        </section>

    </main>

    <!-- Footer -->
    <footer class="bg-gray-800 text-gray-300 py-8 px-4">
        <div class="container mx-auto flex flex-col md:flex-row justify-between items-center text-center md:text-left space-y-4 md:space-y-0">
            <p>&copy; 2024 Wanderlust. All rights reserved.</p>
            <div class="flex space-x-6">
                <a href="#" class="hover:text-white transition-colors">
                    <!-- Placeholder SVG for social media icon -->
                    <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M12 0c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm-2 16h-2v-6h2v6zm6-6h-4v2h4v-2zm-2 4h-2v2h2v-2z"></path></svg>
                </a>
                <a href="#" class="hover:text-white transition-colors">
                    <!-- Placeholder SVG for social media icon -->
                    <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M12 0c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm-2 16h-2v-6h2v6zm6-6h-4v2h4v-2zm-2 4h-2v2h2v-2z"></path></svg>
                </a>
                <a href="#" class="hover:text-white transition-colors">
                    <!-- Placeholder SVG for social media icon -->
                    <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M12 0c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm-2 16h-2v-6h2v6zm6-6h-4v2h4v-2zm-2 4h-2v2h2v-2z"></path></svg>
                </a>
            </div>
        </div>
    </footer>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            // Get references to the HTML elements
            const destinationInput = document.getElementById('destination-input');
            const generateButton = document.getElementById('generate-button');
            const loadingIndicator = document.getElementById('loading-indicator');
            const itineraryOutput = document.getElementById('itinerary-output');

            /**
             * Handles the generation of a travel itinerary using the Gemini API.
             * It uses a simple retry mechanism with exponential backoff for API calls.
             */
            async function generateItinerary() {
                const destination = destinationInput.value.trim();
                if (!destination) {
                    itineraryOutput.textContent = 'Please enter a destination to generate an itinerary.';
                    return;
                }

                itineraryOutput.textContent = '';
                loadingIndicator.classList.remove('hidden');
                generateButton.disabled = true;

                const maxRetries = 3;
                let retryDelay = 1000;

                for (let i = 0; i < maxRetries; i++) {
                    try {
                        const prompt = `Create a detailed 3-day travel itinerary for a trip to ${destination}. Include suggestions for sightseeing, food, and activities. Present the information clearly and concisely, structured by day.`;
                        const chatHistory = [{ role: "user", parts: [{ text: prompt }] }];
                        const payload = { contents: chatHistory };
                        const apiKey = "";
                        const apiUrl = "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-05-20:generateContent?key=" + apiKey;

                        const response = await fetch(apiUrl, {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify(payload)
                        });

                        const result = await response.json();

                        if (result.candidates && result.candidates.length > 0 &&
                            result.candidates[0].content && result.candidates[0].content.parts &&
                            result.candidates[0].content.parts.length > 0) {
                            const text = result.candidates[0].content.parts[0].text;
                            itineraryOutput.textContent = text;
                            break; // Exit the retry loop on success
                        } else {
                            throw new Error('Unexpected API response structure.');
                        }
                    } catch (error) {
                        console.error('Error generating itinerary:', error);
                        if (i < maxRetries - 1) {
                            await new Promise(res => setTimeout(res, retryDelay));
                            retryDelay *= 2; // Exponential backoff
                        } else {
                            itineraryOutput.textContent = 'Sorry, there was an error generating your itinerary. Please try again later.';
                        }
                    } finally {
                        loadingIndicator.classList.add('hidden');
                        generateButton.disabled = false;
                    }
                }
            }

            generateButton.addEventListener('click', generateItinerary);

            // Optional: Also allow generating on Enter key press in the input field
            destinationInput.addEventListener('keydown', (event) => {
                if (event.key === 'Enter') {
                    generateItinerary();
                }
            });
        });
    </script>
</body>
</html>
